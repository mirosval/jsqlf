===
min jinja
===

{{ config(required_tests='None') }}
select * from {{ ref('table') }}

---

(source_file
 (jinja_expression
   (jinja_fn_call
    (jinja_identifier)
    (jinja_argument_list
     (jinja_kwarg
      (jinja_identifier)
       (jinja_lit_string)))))
 (sql_statement
  (sql_select_statement
   (sql_select_clause
    (sql_column_list))
   (sql_from_clause
     (sql_table_list
     (jinja_expression
      (jinja_fn_call
       (jinja_identifier)
       (jinja_argument_list
         (jinja_lit_string)))))))))

===
min sql casing
===

SELECT * From table

---

(source_file
 (sql_statement
  (sql_select_statement
   (sql_select_clause
    (sql_column_list))
   (sql_from_clause
    (sql_table_list 
    (sql_table_name 
      (sql_identifier)))))))

===
sql min select multiple from tables
===

select * from t1, t2

---

(source_file
 (sql_statement
  (sql_select_statement
   (sql_select_clause
    (sql_column_list))
   (sql_from_clause
    (sql_table_list
    (sql_table_name
     (sql_identifier))
    (sql_table_name
     (sql_identifier)))))))

===
sql min select table alias
===

select * from t1 as t

---

(source_file
 (sql_statement
  (sql_select_statement
   (sql_select_clause
    (sql_column_list))
   (sql_from_clause
    (sql_table_list
    (sql_table_name
     (sql_identifier)
     (sql_identifier)))))))

===
sql min select fn
===

select min(1) as c

---

(source_file
 (sql_statement
  (sql_select_statement
   (sql_select_clause
    (sql_column_list
      (sql_alias
        (sql_fn
         (sql_identifier)
         (sql_arg_list
           (sql_identifier)))
       (sql_identifier)))))))

===
sql min select where clause 
===

select * from a
where a = 'a'

---

(source_file
 (sql_statement
  (sql_select_statement
   (sql_select_clause
    (sql_column_list))
   (sql_from_clause
   (sql_table_list
    (sql_table_name
     (sql_identifier))))
   (sql_where_clause
     (sql_binary_expr
       (sql_identifier)
       (sql_string
        (content)))))))

===
sql min select where clause boolean 
===

select * from a
where a = 'a' and b > 1

---

(source_file
 (sql_statement
  (sql_select_statement
   (sql_select_clause
    (sql_column_list))
   (sql_from_clause
   (sql_table_list
    (sql_table_name
     (sql_identifier))))
   (sql_where_clause
     (sql_boolean_expr
       (sql_binary_expr
         (sql_identifier)
         (sql_string
          (content)))
       (sql_binary_expr
         (sql_identifier)
         (sql_identifier)))))))

===
sql min select where parens 
===

select * from a
where (a = 'a' and b > 1) or c = 2

---

(source_file
 (sql_statement
  (sql_select_statement
   (sql_select_clause
    (sql_column_list))
   (sql_from_clause
    (sql_table_list
     (sql_table_name
      (sql_identifier))))
   (sql_where_clause
    (sql_boolean_expr
     (sql_boolean_expr
      (sql_binary_expr
       (sql_identifier)
       (sql_string
        (content)))
      (sql_binary_expr
       (sql_identifier)
       (sql_identifier)))
     (sql_binary_expr
      (sql_identifier)
      (sql_identifier)))))))

===
sql min union
===

select 1
union all
select 1

---

(source_file
 (sql_statement
  (sql_union_statement
   (sql_statement
    (sql_select_statement
     (sql_select_clause
      (sql_column_list
        (sql_identifier)))))
   (sql_statement
    (sql_select_statement
     (sql_select_clause
      (sql_column_list
        (sql_identifier))))))))

===
sql min intersect
===

select 1
intersect all
select 1

---

(source_file
 (sql_statement
  (sql_intersect_statement
   (sql_statement
    (sql_select_statement
     (sql_select_clause
      (sql_column_list
        (sql_identifier)))))
   (sql_statement
    (sql_select_statement
     (sql_select_clause
      (sql_column_list
        (sql_identifier))))))))

===
sql min except
===

select 1
except all
select 1

---

(source_file
 (sql_statement
  (sql_except_statement
   (sql_statement
    (sql_select_statement
     (sql_select_clause
      (sql_column_list
        (sql_identifier)))))
   (sql_statement
    (sql_select_statement
     (sql_select_clause
      (sql_column_list
        (sql_identifier))))))))

===
sql min union precedence
===

select 1
union
select 1
union
select 1

---

(source_file
 (sql_statement
  (sql_union_statement
   (sql_statement
    (sql_union_statement
     (sql_statement
      (sql_select_statement
       (sql_select_clause
        (sql_column_list
          (sql_identifier)))))
     (sql_statement
      (sql_select_statement
       (sql_select_clause
        (sql_column_list
          (sql_identifier)))))))
   (sql_statement
    (sql_select_statement
     (sql_select_clause
      (sql_column_list
        (sql_identifier))))))))

===
sql min union except intersect precedence
===

select 1
union
select 1
except
select 1
intersect
select 1

---

(source_file
 (sql_statement
  (sql_except_statement
   (sql_statement
    (sql_union_statement
     (sql_statement
      (sql_select_statement
       (sql_select_clause
        (sql_column_list
          (sql_identifier)))))
     (sql_statement
      (sql_select_statement
       (sql_select_clause
        (sql_column_list
          (sql_identifier)))))))
   (sql_statement
    (sql_intersect_statement
     (sql_statement
      (sql_select_statement
       (sql_select_clause
        (sql_column_list
          (sql_identifier)))))
     (sql_statement
      (sql_select_statement
       (sql_select_clause
        (sql_column_list
          (sql_identifier))))))))))
